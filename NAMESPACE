exportPattern("^[[:alpha:]]+")

S3method(print, VLSTAR)

S3method(print, summary.VLSTAR)

S3method(summary, VLSTAR)

S3method(predict, VLSTAR)

S3method(print, multiCUMSUM)

S3method(print, VLSTARjoint)

S3method(coef, VLSTAR)

S3method(logLik, VLSTAR)

S3method(plot, VLSTAR)

S3method(predict, VLSTAR)

S3method(print, VLSTAR)

S3method(plot, vlstarpred)

S3method(print, vlstarpred)

importFrom("data.table", "rbindlist")

importFrom("doParallel", "dopar", "registerDoParallel")

importFrom("doSNOW", "makeCluster", ".options.snow", "registerDoSNOW")

importFrom("dplyr", "if_else")

importFrom("fGarch", "garchFit")

importFrom("foreach", "foreach")

importFrom("graphics", "abline", "axis", "box", "layout", "lcm", "lines", "mtext", "par", "plot",
           "points")

importFrom("ks", "invvec", "invvech")

importFrom("lessR", "to")

importFrom("lubridate", "year")

importFrom("MASS", "ginv")

importFrom("matrixcalc", "matrix.trace", "vec", "vech")

importFrom('maxLik', 'maxLik')

importFrom("methods", "is")

importFrom("optimParallel", "optimParallel")

importFrom("parallel", "detectCores")

importFrom("quantmod", "dailyReturn", "monthlyReturn", "yearlyReturn")

importFrom("stats", "acf", "fitted", "lag", "lm", "na.omit", "optim", "pacf", "pchisq",
           "plot.ts", "pt", "quantile", "qchisq", "qf", "qt", "resid", "residuals", "rnorm", "sd", "symnum")

importFrom("utils", "setTxtProgressBar", "tail.matrix")

importFrom("vars", "VAR")

importFrom("xts", "xts", "apply.daily", "apply.monthly", "apply.quarterly", "apply.yearly", "as.xts")

importFrom("zoo", "as.Date", "as.yearqtr", "index", "zoo")

