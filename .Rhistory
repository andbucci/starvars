npre1 <- nrow(preunique1)
pre_dfa <- matrix(0, nrow = npre, ncol = ndise)
for(k in 1:npre){
for(l in 1:ndise){
for(p in 1:length(MCS1[[l]]$ATC)){
#if(any(grepl(MCS[[l]]$ATC[p], substr(premulti[[k]]$atc,start =1, stop = nchar(MCS[[l]]$ATC[p]))))) pre_df[k,l] <- 1
if(any(substr(premulti3[[k]]$atc,start =1, stop = nchar(MCS1[[l]]$ATC[p])) %in% MCS1[[l]]$ATC)) pre_dfa[k,l] <- 1
}}
}
prena1 <- as.matrix(names(premulti3))
pre_df1a <- cbind(prena1, pre_dfa)
pre_dfa <- matrix(0, nrow = npre1, ncol = ndise)
for(k in 1:npre){
for(l in 1:ndise){
for(p in 1:length(MCS1[[l]]$ATC)){
#if(any(grepl(MCS[[l]]$ATC[p], substr(premulti[[k]]$atc,start =1, stop = nchar(MCS[[l]]$ATC[p]))))) pre_df[k,l] <- 1
if(any(substr(premulti3[[k]]$atc,start =1, stop = nchar(MCS1[[l]]$ATC[p])) %in% MCS1[[l]]$ATC)) pre_dfa[k,l] <- 1
}}
}
prena1 <- as.matrix(names(premulti3))
pre_df1a <- cbind(prena1, pre_dfa)
prep1 <- as.data.frame(pre_df1a)
colnames(prep1) <- c('id', names(MCS1))
sdpre1 <- as.data.frame(rbind(sdop1, prep1))
sdfa <- as.data.frame(sdpre1)
for(r in 2:47){
sdfa[,r] <- as.numeric(as.character(sdfa[,r]))
}
sdf1a <- sdfa %>% group_by(id) %>% summarise_each(funs(sum))
df <- sdf1a
df[df==2] <- 1 #Sostituisco i 2 con 1
morto <- ana50a[ana50a$id %in% df$id,]
morto$id <- as.character(morto$id)
morto <- morto[order(morto$id),]
dead <- morto
dead$data_decesso[is.na(dead$data_decesso)] <- '2017-12-31'
dead$surv <- age_calc(as.Date('2013-01-01'),dead$data_decesso, units = 'days')
dead$Morto[dead$Morto == 1] <- 2
dead$Morto[dead$Morto == 0] <- 1
df$id <- as.character(df$id)
df <- df[df$id %in% morto$id,]
df <- df[order(df$id),]
#df$Morto <- morto$Morto #Creo variabile morto si/no
df$Sesso <- morto$sesso
df$status <- dead$Morto
df$Age <- morto$age
df$time <- dead$surv
dialysis <- df[df$Kidneydiseases == 0 & df$Kidneydialysis == 1,]
df <- df[!df$id %in% dialysis$id,]
df1 <- df[,-1]
df1 <- as.data.frame(df1)
for(l in 1:48){
df1[,l] <- factor(df1[,l])#Fattori
}
df2 <- df1
df2$time <- NULL
nsample <- nrow(df1)
ntrain <- nsample*2/3
seed <- .Random.seed
set.seed(seed)
sam <- sample(1:nsample, ntrain)
dftrain <- df1[sam,]
dftest <- df1[-sam,]
dftest$id <- df$id[-sam]
df3 <- as.data.frame(dftest[,1:46])
df3 <- unfactor(df3)
scoreMBCS <- matrix(NA, ncol = ncol(df3), nrow = nrow(df3))
scoreMCS <- matrix(NA, ncol = ncol(df3), nrow = nrow(df3))
for(i in 1:nrow(df3)){
mb1 <- df3[i,]*MBCS
mb2 <- df3[i,]*MCS
scoreMBCS[i,] <- as.matrix(mb1)
scoreMCS[i,] <- as.matrix(mb2)
}
MBCS_df <- as.data.frame(scoreMBCS)
colnames(MBCS_df) <- colnames(df1[,1:46])
MBCS_df$MBCS <- rowSums(MBCS_df)
MBCS_df$Age <- df1$Age[-sam]
MBCS_df$Gender <- df1$Sesso[-sam]
sdomulti1 <- sdomulti
colnames(sdomulti1) <- c('id', 'cod1', 'cod2', 'cod3', 'cod4', 'cod5', 'cod6', 'freq')
sdoind <- melt(sdomulti1, id.vars = 'id')
sdoind <- sdoind[sdoind$variable != 'freq',]
sdoind <- sdoind[!is.na(sdoind$value),]
sdoind <- sdoind[order(sdoind$id),]
sdoind <- sdoind[sdo$id %in% dftest$id,]
sdoind <- sdoind[,c(1,3)]
colnames(sdoind) <- c('id', 'code')
charl <- comorbidity(sdoind, id = 'id', code = 'code', score = 'charlson', icd = 'icd9')
elix <- comorbidity(sdoind, id = 'id', code = 'code', score = 'elixhauser', icd = 'icd9')
##Curva ROC e AUC
test <- MBCS_df
test$id <- df$id[-sam]
test <- test[test$id %in% charl$id,]
test1 <- MCS_df
test1$id <- df$id[-sam]
test1 <- test1[test1$id %in% charl$id,]
#dftest <- df2[((ntrain+1):nsample),]
#dftest$id <- df$id[((ntrain+1):nsample)]
dftest <- dftest[dftest$id %in% charl$id, ]
charl <- comorbidity(sdoind, id = 'id', code = 'code', score = 'charlson', icd = 'icd9')
elix <- comorbidity(sdoind, id = 'id', code = 'code', score = 'elixhauser', icd = 'icd9')
charl <- charl[charl$id %in% dftest$id,]
elix <- elix[elix$id %in% dftest$id,]
charl <- charl[order(charl$id),]
elix <- elix[order(elix$id),]
allscores <- as.data.frame(cbind(test$MBCS, test1$MCS, charl$score, elix$score, dftest$status))
colnames(allscores) <- c('MBCS', 'MCS', 'Charlson', 'Elixhauser', 'Status')
roc1 <- roc(allscores$Status, allscores$MBCS)
roc2 <- roc(allscores$Status, allscores$MCS)
roc3 <- roc(allscores$Status, allscores$Charlson)
roc4 <- roc(allscores$Status, allscores$Elixhauser)
##Curva ROC e AUC
test <- MBCS_df
test$id <- df$id[-sam]
test <- test[test$id %in% charl$id,]
test1 <- MCS_df
test1$id <- df$id[-sam]
MBCS_df <- as.data.frame(scoreMBCS)
colnames(MBCS_df) <- colnames(df1[,1:46])
MBCS_df$MBCS <- rowSums(MBCS_df)
MBCS_df$Age <- df1$Age[-sam]
MBCS_df$Gender <- df1$Sesso[-sam]
MCS_df <- as.data.frame(scoreMCS)
colnames(MCS_df) <- colnames(df1[,1:46])
MCS_df$MCS <- rowSums(MCS_df)
sdomulti1 <- sdomulti
colnames(sdomulti1) <- c('id', 'cod1', 'cod2', 'cod3', 'cod4', 'cod5', 'cod6', 'freq')
sdoind <- melt(sdomulti1, id.vars = 'id')
sdoind <- sdoind[sdoind$variable != 'freq',]
sdoind <- sdoind[!is.na(sdoind$value),]
sdoind <- sdoind[order(sdoind$id),]
sdoind <- sdoind[sdo$id %in% dftest$id,]
sdoind <- sdoind[,c(1,3)]
colnames(sdoind) <- c('id', 'code')
charl <- comorbidity(sdoind, id = 'id', code = 'code', score = 'charlson', icd = 'icd9')
elix <- comorbidity(sdoind, id = 'id', code = 'code', score = 'elixhauser', icd = 'icd9')
##Curva ROC e AUC
test <- MBCS_df
test$id <- df$id[-sam]
test <- test[test$id %in% charl$id,]
test1 <- MCS_df
test1$id <- df$id[-sam]
test1 <- test1[test1$id %in% charl$id,]
#dftest <- df2[((ntrain+1):nsample),]
#dftest$id <- df$id[((ntrain+1):nsample)]
dftest <- dftest[dftest$id %in% charl$id, ]
charl <- comorbidity(sdoind, id = 'id', code = 'code', score = 'charlson', icd = 'icd9')
elix <- comorbidity(sdoind, id = 'id', code = 'code', score = 'elixhauser', icd = 'icd9')
charl <- charl[charl$id %in% dftest$id,]
elix <- elix[elix$id %in% dftest$id,]
charl <- charl[order(charl$id),]
elix <- elix[order(elix$id),]
allscores <- as.data.frame(cbind(test$MBCS, test1$MCS, charl$score, elix$score, dftest$status))
colnames(allscores) <- c('MBCS', 'MCS', 'Charlson', 'Elixhauser', 'Status')
roc1 <- roc(allscores$Status, allscores$MBCS)
roc2 <- roc(allscores$Status, allscores$MCS)
roc3 <- roc(allscores$Status, allscores$Charlson)
roc4 <- roc(allscores$Status, allscores$Elixhauser)
roc.test(roc1, roc2)
roc.test(roc1, roc3)
roc.test(roc1, roc4)
roc.test(roc1, roc2)
roc.test(roc1, roc3)
roc.test(roc1, roc4)
ggroc(list(roc1, roc2, roc3, roc4))
colori <- gray.colors(4, start = 0.1, end = 0.8)
plot(roc1, col = colori[1], lty = 2, main = "ROC", xlab = '1-Specificity')
plot(roc2, col = colori[2], lty = 3, add = TRUE)
plot(roc3, col = colori[3], lty = 4, add = TRUE)
plot(roc4, col = colori[4], lty = 6, add = TRUE)
legend(0.35,0.7, legend = c('MBCS', 'MCS', 'CCI', 'EI'), col = colori, lty = c(2,3,4,6),
cex = 0.8, box.lty = 1.2, bg = 'transparent', y.intersp=0.5, bty = "n", lwd = 1.5)
View(icd9sub)
load("~/MCS_train.RData")
reclassification(data = allscores_re, cOutcome = 5, predrisk1 = predRisk(log2a), predrisk2 = predRisk(log1a), cutoff <- c(0,.2,.4,.6,.8,1))
library(icd.data)
library(eeptools)
library(QPXflight)
library(data.table)
library(dplyr)
#library(plyr)
library(BAS)
library(MASS)
library(BMA)
library(tidyverse)
library(broom)
library(pROC)
library(comorbidity)
library(survival)
library(reshape2)
library(varhandle)
library(PredictABEL)
library(survminer)
reclassification(data = allscores_re, cOutcome = 5, predrisk1 = predRisk(log2a), predrisk2 = predRisk(log1a), cutoff <- c(0,.2,.4,.6,.8,1))
reclassification(data = allsco, cOutcome = 5, predrisk1 = predRisk(log2), predrisk2 = predRisk(log1), cutoff <- c(0,.2,.4,.6,.8,1))
reclassification(data = allsco, cOutcome = 5, predrisk1 = predRisk(log3), predrisk2 = predRisk(log1), cutoff <- c(0,.2,.4,.6,.8,1))
reclassification(data = allsco, cOutcome = 5, predrisk1 = predRisk(log2), predrisk2 = predRisk(log1), cutoff <- c(0,.2,.4,.6,.8,1))
reclassification(data = allsco, cOutcome = 5, predrisk1 = predRisk(log3), predrisk2 = predRisk(log1), cutoff <- c(0,.2,.4,.6,.8,1))
reclassification(data = allsco, cOutcome = 5, predrisk1 = predRisk(log4), predrisk2 = predRisk(log1), cutoff <- c(0,.2,.4,.6,.8,1))
barplot(tabella5059, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = '50-59 years',
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
barplot(tabella5059, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = '50-59 anni',
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
barplot(tabella6069, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = '60-69 years',
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
box()
barplot(tabella5059, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = '50-59 anni',
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
box()
tabella6069 <- round(100*prop.table(table(MBCS6069$Gender, MBCS6069$Severity), margin = 1),2)
barplot(tabella6069, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = '60-69 years',
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
box()
barplot(tabella6069, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = '60-69 anni',
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
box()
tabella7079 <- round(100*prop.table(table(MBCS7079$Gender, MBCS7079$Severity), margin = 1),2)
barplot(tabella7079, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = '70-79 years',
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
box()
barplot(tabella7079, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = '70-79 anni',
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
box()
barplot(tabella80, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = expression(" ">="80 years"),
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
box()
barplot(tabella80, xlab = 'MBCS', ylab = '%', beside =T, ylim = c(0,100), main = expression(" ">="80 anni"),
names.arg = c('0-4', '5-9', '10-14','15-19','>=20'), col = c('gray30', 'white'))
grid(nx=NA, ny=NULL)
legend(x = "right", legend = c('F', 'M'), bty = "n", y.intersp = 2, fill = c('gray30', 'white'))
box()
roc.test(roc1, roc2)
roc.test(roc1, roc3)
roc.test(roc1, roc4)
ggroc(list(roc1, roc2, roc3, roc4))
ggroc(list(roc1, roc2, roc3, roc4))
colori <- gray.colors(4, start = 0.1, end = 0.8)
plot(roc1, col = colori[1], lty = 2, main = "ROC", xlab = '1-Specificity')
plot(roc2, col = colori[2], lty = 3, add = TRUE)
plot(roc3, col = colori[3], lty = 4, add = TRUE)
plot(roc4, col = colori[4], lty = 6, add = TRUE)
legend(0.35,0.7, legend = c('MBCS', 'MCS', 'CCI', 'EI'), col = colori, lty = c(2,3,4,6),
cex = 0.8, box.lty = 1.2, bg = 'transparent', y.intersp=0.5, bty = "n", lwd = 1.5)
ggroc(list(roc1, roc2, roc3, roc4))
colori <- gray.colors(4, start = 0.1, end = 0.8)
ggroc(list(roc1a, roc2a, roc3a, roc4a))
load("~/ReplicaMCS_2705.RData")
##Re-ospedalizzazione
load("~/MCS_train.RData")
memory.limit(size = 200000)
##Re-ospedalizzazione
load("~/MCS_train.RData")
roc1a <- roc(allscores_re$Status, allscores_re$MBCS)
roc2a <- roc(allscores_re$Status, allscores_re$MCS)
library(icd.data)
library(eeptools)
library(QPXflight)
library(data.table)
library(dplyr)
#library(plyr)
library(BAS)
library(MASS)
library(BMA)
library(tidyverse)
library(broom)
library(pROC)
library(comorbidity)
library(survival)
library(reshape2)
library(varhandle)
library(PredictABEL)
library(survminer)
roc1a <- roc(allscores_re$Status, allscores_re$MBCS)
roc2a <- roc(allscores_re$Status, allscores_re$MCS)
reosp <- ana50a[ana50a$id %in% df$id,]
sdoreos <- sdo[, c('id', 'dt_ricovero', 'dt_dimissione')]
sdoreos1 <- sdoreos[with(sdoreos, order(id, dt_ricovero)),]
sdoreos1$differenza <- 100
sdoreos1$differenza[1] <- 100
for(i in 2:nrow(sdoreos1)){
if(sdoreos1$id[i] == sdoreos1$id[(i-1)]){
sdoreos1$differenza[i] <- sdoreos1$dt_ricovero[i] - sdoreos1$dt_dimissione[(i-1)]
}
}
reosp1 <- sdoreos1[sdoreos1$differenza < 30 & sdoreos1$differenza >= 0,]
idreosp <- as.character(unique(reosp1$id))
dfreosp <- df
dfreosp$Reosp <- NA
dfreosp$Reosp[!dfreosp$id %in% idreosp] <- 0
dftest3 <- df1[-sam,]
dftest3$id <- df$id[-sam]
dfreosp$Reosp[dfreosp$id %in% idreosp] <- 1
charla <- comorbidity(sdoind, id = 'id', code = 'code', score = 'charlson', icd = 'icd9')
elixa <- comorbidity(sdoind, id = 'id', code = 'code', score = 'elixhauser', icd = 'icd9')
charl1 <- charla[charla$id %in% dfreosp$id,]
elix1 <- elixa[elixa$id %in% dfreosp$id,]
charl1 <- charl1[order(charl1$id),]
elix1 <- elix1[order(elix1$id),]
MCS_re <- MCS_df
MCS_re$id <- dftest3$id
MBCS_re <- MBCS_df
MCS_re <- MCS_re[MCS_re$id %in% charl1$id, ]
MBCS_re$id <- dftest3$id
MBCS_re <- MBCS_re[MBCS_re$id %in% charl1$id, ]
charl1 <- charl1[charl1$id %in% MBCS_re$id,]
elix1 <- elix1[elix1$id %in% MBCS_re$id,]
dfre <- dfreosp[dfreosp$id %in% charl1$id, ]
allscores_re <- as.data.frame(cbind(MBCS_re$MBCS, MCS_re$MCS, charl1$score, elix1$score, dfre$Reosp))
colnames(allscores_re) <- c('MBCS', 'MCS', 'Charlson', 'Elixhauser', 'Status')
roc1a <- roc(allscores_re$Status, allscores_re$MBCS)
roc2a <- roc(allscores_re$Status, allscores_re$MCS)
roc3a <- roc(allscores_re$Status, allscores_re$Charlson)
roc4a <- roc(allscores_re$Status, allscores_re$Elixhauser)
roc.test(roc1a, roc2a)
roc.test(roc1a, roc3a)
roc.test(roc1a, roc4a)
ggroc(list(roc1a, roc2a, roc3a, roc4a))
plot(roc1, col = colori[1], lty = 2, main = "ROC", xlab = '1-Specificity')
colori <- gray.colors(4, start = 0.1, end = 0.8)
plot(roc1, col = colori[1], lty = 2, main = "ROC", xlab = '1-Specificity')
plot(roc2, col = colori[2], lty = 3, add = TRUE)
plot(roc3, col = colori[3], lty = 4, add = TRUE)
plot(roc4, col = colori[4], lty = 6, add = TRUE)
legend(0.35,0.7, legend = c('MBCS', 'MCS', 'CCI', 'EI'), col = colori, lty = c(2,3,4,6),
cex = 0.8, box.lty = 1.2, bg = 'transparent', y.intersp=0.5, bty = "n", lwd = 1.5)
plot(roc1a, col = colori[1], lty = 2, main = "ROC", xlab = '1-Specificity')
plot(roc2a, col = colori[2], lty = 3, add = TRUE)
plot(roc3a, col = colori[3], lty = 4, add = TRUE)
plot(roc4a, col = colori[4], lty = 6, add = TRUE)
legend(0.35,0.7, legend = c('MBCS', 'MCS', 'CCI', 'EI'), col = colori, lty = c(2,3,4,6),
cex = 0.8, box.lty = 1.2, bg = 'transparent', y.intersp=0.5, bty = "n", lwd = 1.5)
roc.test(roc1a, roc2a)
roc1a
roc1
print(roc1)
summary(roc1)
roc1
roc1$percent
roc.test(roc1, roc2)
?roc.test
confint(roc1)
ci(roc1)
ci(roc1a)
ci(roc2a)
roc2a
roc.test(roc1a, roc2a)
roc.test(roc1a, roc3a)
roc.test(roc1a, roc4a)
ci(roc3a)
roc4a
ci(roc4a)
reclassification(data = allscores_re, cOutcome = 5, predrisk1 = predRisk(log2a), predrisk2 = predRisk(log1a), cutoff <- c(0,.2,.4,.6,.8,1))
log1a <- glm(Status ~ MBCS, data = allscores_re, family = binomial(link = 'logit'))
log2a <- glm(Status ~ MCS, data = allscores_re, family = binomial(link = 'logit'))
log3a <- glm(Status ~ Charlson, data = allscores_re, family = binomial(link = 'logit'))
log4a <- glm(Status ~ Elixhauser, data = allscores_re, family = binomial(link = 'logit'))
reclassification(data = allscores_re, cOutcome = 5, predrisk1 = predRisk(log2a), predrisk2 = predRisk(log1a), cutoff <- c(0,.2,.4,.6,.8,1))
reclassification(data = allscores_re, cOutcome = 5, predrisk1 = predRisk(log3a), predrisk2 = predRisk(log1a), cutoff <- c(0,.2,.4,.6,.8,1))
reclassification(data = allscores_re, cOutcome = 5, predrisk1 = predRisk(log4a), predrisk2 = predRisk(log1a), cutoff <- c(0,.2,.4,.6,.8,1))
dati <- read.table(file = 'clipboard', header = T)
dati <- read.table(file = 'clipboard', header = T, sep = '\t')
View(dati)
dati$fibrinogeno.
dati$Fibrinogen
summary(dati$Fibrinogen)
dati <- read.table(file = 'clipboard', header = T, sep = '\t', stringsAsFactors = F)
dati$Fibrinogen <- as.numeric(dati$Fibrinogen)
dati$thromb.after.diagnosis <- as.factor(dati$thromb.after.diagnosis)
lm(thromb.after.diagnosis ~ Fibrinogen, data = dati, family = binomial(link = 'logit'))
lm(thromb.after.diagnosis ~ Fibrinogen, data = dati)
lm(thromb.after.diagnosis ~ Fibrinogen, data = dati, family = binomial)
pio <- lm(thromb.after.diagnosis ~ Fibrinogen, data = dati, family = binomial)
summary(pio)
class(dati$thromb.after.diagnosis)
View(dati)
dati1 <- dati
dati <- dati[!is.na(dati$Fibrinogen)]
dati <- dati[!is.na(dati$Fibrinogen),]
pio <- lm(thromb.after.diagnosis ~ Fibrinogen, data = dati, family = binomial)
pio
glm(thromb.after.diagnosis ~ Fibrinogen, data = dati, family = binomial(link = 'logit'))
pio <- glm(thromb.after.diagnosis ~ Fibrinogen, data = dati, family = binomial(link = 'logit'))
summary(pio)
plot(pio)
plot(pio)
dati$Age.at.diagnosis <- as.numeric(dati$Age.at.diagnosis)
pio <- glm(thromb.after.diagnosis ~ Fibrinogen + Age.at.diagnosis, data = dati, family = binomial(link = 'logit'))
summary(pio)
dati$PLT <- as.numeric(dati$PLT)
pio <- glm(thromb.after.diagnosis ~ Fibrinogen + PLT, data = dati, family = binomial(link = 'logit'))
summary(pio)
dati$WBC <- as.numeric(dati$WBC)
pio <- glm(thromb.after.diagnosis ~ Fibrinogen + WBC, data = dati, family = binomial(link = 'logit'))
summary(pio)
table(dati$thromb.after.diagnosis)
table(dati$bleedings.after.diagnosis)
dati$bleedings.after.diagnosis <- as.factor(dati$bleedings.after.diagnosis)
dati$Evento[dati$bleedings.after.diagnosis == 1 & dati$thromb.after.diagnosis == 1,] <- 1
dati$Evento[dati$bleedings.after.diagnosis == 1 & dati$thromb.after.diagnosis == 1] <- 1
dati$Evento[dati$bleedings.after.diagnosis == 1 \ dati$thromb.after.diagnosis == 1] <- 1
dati$Evento[dati$bleedings.after.diagnosis == 1 | dati$thromb.after.diagnosis == 1] <- 1
dati$Evento <- 0
dati$Evento[dati$bleedings.after.diagnosis == 1 | dati$thromb.after.diagnosis == 1] <- 1
pio <- glm(Evento ~ Fibrinogen + WBC, data = dati, family = binomial(link = 'logit'))
summary(pio)
pio <- glm(Evento ~ Fibrinogen, data = dati, family = binomial(link = 'logit'))
summary(pio)
pio <- glm(Evento ~ PLT, data = dati, family = binomial(link = 'logit'))
summary(pio)
pio <- glm(Evento ~ WBC, data = dati, family = binomial(link = 'logit'))
summary(pio)
table(dati$Evento)
dati$fibrinogen.supplementation <- as.factor(dati$fibrinogen.supplementation)
pio <- glm(Evento ~ fibrinogen.supplementation, data = dati, family = binomial(link = 'logit'))
summary(pio)
pio <- glm(Evento ~ PLT, data = dati, family = binomial(link = 'logit'))
summary(pio)
pio <- glm(Evento ~ Age.at.diagnosis, data = dati, family = binomial(link = 'logit'))
summary(pio)
dati$Sex <- as.factor(dati$Sex)
pio <- glm(Evento ~ Sex, data = dati, family = binomial(link = 'logit'))
summary(pio)
dati$FDP <- as.numeric(dati$FDP)
pio <- glm(Evento ~ fdp, data = dati, family = binomial(link = 'logit'))
pio <- glm(Evento ~ FDP, data = dati, family = binomial(link = 'logit'))
summary(pio)
pio <- glm(Evento ~ FDP, data = dati, family = binomial
)
summary(pio)
View(dati)
View(dati1)
pio <- glm(PLT ~ FDP, data = dati, family = binomial
)
pio <- lm(PLT ~ FDP, data = dati)
summary(pio)
pio <- lm(PLT ~ Fibrogen, data = dati)
pio <- lm(PLT ~ Fibrinogen, data = dati)
summary(pio)
summary(pio)
plot(pio)
pio <- lm( ~ Fibrinogen, data = dati)
pio <- lm(Evento ~ Fibrinogen, data = dati)
summary(pio)
plot(dati$Fibrinogen, dati$Evento)
library(starvars)
?lrvarbart
rm(list=ls(all=TRUE))
#----------------CROSS COUNTRY----------------------------------------------------------------------------
setwd("C:/Users/Andrea Bucci/OneDrive - Università Politecnica delle Marche/Articolo VLSTAR/Dati New")
setwd("C:/Users/andre/OneDrive - Università Politecnica delle Marche/Articolo VLSTAR/Dati New")
#CARICO I DATI DA EXCEL------------------------
Date1 <- seq(as.Date("1990/8/1"), by = "month", length.out = 335)
Date1 <- Date1[1:223]
dati <- read.xlsx('Nuove_Esogene.xlsx',2)
y1 <- dati[1:223,1:10]
library(xlsx)
dati <- read.xlsx('Nuove_Esogene.xlsx',2)
y1 <- dati[1:223,1:10]
x1 <- dati[1:223,21:47]
ylag <- dati[1:223,11:20]
#VAR
x2 <- x1[, c('DP','Inf_UK','IP_US','IP_JPN','Sep','US_MKT','US_SMB','JPN_SMB','JPN_HML',
'Une_USA','Une_GER','US_News','JPN_News','Europe_News')]
modvlstar <- VLSTAR.nls(y1, x2, m = 2, p=1, st = ylag$y1_1, n.combi = 2, n.iter = 2, constant = T, exo = T,
epsilon = 10^-3)
?lrvarbart
lrvarbart(dati$y1)
lrvarbar(dati$y1)
lrvar(dati$y1)
?starvars
?xlsx
?starvars
?multiCUMSUM
multiCUMSUM(dati$y1)
multiCUMSUM(y1)
library(devtools)
install_github('andbucci/starvars')
library(starvars)
?multiCUMSUM
?rcov
?rcov
?rcov
remove.packages('starvars')
install_github('andbucci/starvars')
library(starvars)
?multiCUMSUM
?rcov
devtools::use_readme_rmd()
setwd("C:/Users/Andrea Bucci/Documents")
devtools::use_readme_rmd()
setwd("C:/Users/Andrea Bucci/Documents/starvars")
devtools::use_readme_rmd()
usethis::use_readme_md()
