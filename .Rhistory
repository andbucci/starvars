indices$Date <-  as.Date(paste(indices$dd,indices$mm,indices$yy, sep ='/'), format = '%d/%m/%Y')
dati6 <- zoo(cbind(indices6[,c(4:7)]), order.by = indices6$Date)
dati <- zoo(cbind(indices[,c(4:7)]), order.by = indices$Date)
dati6 <- xts(dati6, order.by = index(dati6))
dati <- xts(dati, order.by = index(dati))
day6SP <- dailyReturn(dati6$SP_index)*100
day6NK <- dailyReturn(dati6$Nikkei_index)*100
day6UK <- dailyReturn(dati6$FTSE_index)*100
day6DE <- dailyReturn(dati6$DAX_index)*100
day6 <- cbind(day6SP, day6NK, day6UK, day6DE)
daySP <- dailyReturn(dati$SP_index)*100
dayNK <- dailyReturn(dati$Nikkei_index)*100
dayUK <- dailyReturn(dati$FTSE_index)*100
dayDE <- dailyReturn(dati$DAX_index)*100
day <- cbind(daySP, dayNK, dayUK, dayDE)
dayRet <- rbind(day6, day)
#STIMA DCC E CONFRONTO CON MODELLO CHOLESKY
#------------------------------------------
#Carico le library
library(afmtools)
library(bcp)
library(ghyp)
library(forecast)
library(gap)
library(ecp)
library(changepoint)
library(matrixcalc)
library(MCS)
library(lmtest)
library(parma)#porfolio optimization
library(portes)
library(PortfolioAnalytics)
library(glmnet)
library(PSTR)
library(quadprog)
library(rmgarch)
library(glmnet)
library(rugarch)
library(stats)
library(foreach)
library(quantmod)
library(doParallel)
library(strucchange)
library(twinkle)
library(tsDyn)
library(hydroTSM)
library(vars)
library(mgarchBEKK)
library(xlsx)
library(xtable)
indices$dd <- formatC(format="d",indices$dd,flag="0",width=ceiling(2))
indices$mm <- formatC(format="d",indices$mm,flag="0",width=ceiling(2))
indices6$dd <- formatC(format="d",indices6$dd,flag="0",width=ceiling(2))
indices6$mm <- formatC(format="d",indices6$mm,flag="0",width=ceiling(2))
indices6$Date <- as.Date(paste(indices6$dd,indices6$mm,indices6$yy, sep='/'), format = '%d/%m/%Y')
indices$Date <-  as.Date(paste(indices$dd,indices$mm,indices$yy, sep ='/'), format = '%d/%m/%Y')
dati6 <- zoo(cbind(indices6[,c(4:7)]), order.by = indices6$Date)
dati <- zoo(cbind(indices[,c(4:7)]), order.by = indices$Date)
dati6 <- xts(dati6, order.by = index(dati6))
dati <- xts(dati, order.by = index(dati))
day6SP <- dailyReturn(dati6$SP_index)*100
day6NK <- dailyReturn(dati6$Nikkei_index)*100
day6UK <- dailyReturn(dati6$FTSE_index)*100
day6DE <- dailyReturn(dati6$DAX_index)*100
day6 <- cbind(day6SP, day6NK, day6UK, day6DE)
daySP <- dailyReturn(dati$SP_index)*100
dayNK <- dailyReturn(dati$Nikkei_index)*100
dayUK <- dailyReturn(dati$FTSE_index)*100
dayDE <- dailyReturn(dati$DAX_index)*100
day <- cbind(daySP, dayNK, dayUK, dayDE)
dayRet <- rbind(day6, day)
realizedcovariance <- function(data, freq, ret = F, cholesky = F){
require(quantmod)
require(ks)
require(lubridate)
if(!freq %in% c('daily', 'monthly', 'quarterly', 'yearly')){
stop('Please, provide a correct frequency for the realized covariance matrix!')
}
if(is(data, 'xts') == F){
stop('Data should be of class "xts".')
}
ncoly <- ncol(data)
nrowy <- nrow(data)
start_date <- index(data)[1]
end_date <- index(data)[nrowy]
elapsed_months <- function(end_date, start_date) {
ed <- as.POSIXlt(end_date)
sd <- as.POSIXlt(start_date)
12 * (ed$year - sd$year) + (ed$mon - sd$mon)+1
}
elapsed_quarters <- function(end_date, start_date){
(as.yearqtr(end_date)-
as.yearqtr(start_date))*4
}
elapsed_years <- function(end_date, start_date){
year(end_date)-
year(start_date)
}
nmonth <- elapsed_months(end_date, start_date)
nquarter <- elapsed_quarters(end_date, start_date)
nyear <- elapsed_years(end_date, start_date)
retu <- matrix(ncol = ncoly, nrow = nrowy)
if(ret == F){
if(freq == 'daily'){
}
if(freq == 'monthly'){
for(j in 1:ncoly){
retu[,j] <- dailyReturn(data[,j])*100
}
crosspro <- matrix(ncol = (ncoly*(ncoly+1)), nrow = nrowy)
for (i in 1:nrowy){
cross <- retu[i,]%*%t(retu[i,])
crosspro[i,] <- t(vech(cross))
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.monthly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (j in 1:nmonth){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
if(freq == 'quarterly'){
for(j in 1:ncoly){
retu[,j] <- dailyReturn(data[,j])*100
}
crosspro <- matrix(ncol = (ncoly*(ncoly+1)), nrow = nrowy)
for (i in 1:nrowy){
cross <- retu[i,]%*%t(retu[i,])
crosspro[i,] <- t(vech(cross))
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nquarter)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.quarterly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nquarter)
for (j in 1:nmonth){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
if(freq == 'yearly'){
for(j in 1:ncoly){
retu[,j] <- monthlyReturn(data[,j])*100
}
crosspro <- matrix(ncol = (ncoly*(ncoly+1)), nrow = nrowy)
for (i in 1:nrowy){
cross <- retu[i,]%*%t(retu[i,])
crosspro[i,] <- t(vech(cross))
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nyear)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.quarterly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nyear)
for (j in 1:nyear){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
}else{
retu <- data
if(freq == 'daily'){
}
if(freq == 'monthly'){
crosspro <- matrix(ncol = (ncoly*(ncoly+1)), nrow = nrowy)
for (i in 1:nrowy){
cross <- retu[i,]%*%t(retu[i,])
crosspro[i,] <- t(vech(cross))
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.monthly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (j in 1:nmonth){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
if(freq == 'quarterly'){
crosspro <- matrix(ncol = (ncoly*(ncoly+1)), nrow = nrowy)
for (i in 1:nrowy){
cross <- retu[i,]%*%t(retu[i,])
crosspro[i,] <- t(vech(cross))
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nquarter)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.quarterly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nquarter)
for (j in 1:nmonth){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
if(freq == 'yearly'){
crosspro <- matrix(ncol = (ncoly*(ncoly+1)), nrow = nrowy)
for (i in 1:nrowy){
cross <- retu[i,]%*%t(retu[i,])
crosspro[i,] <- t(vech(cross))
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nyear)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.quarterly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nyear)
for (j in 1:nyear){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
}
if(cholesky == T){
results <- list(realized, chol2)
names(results) <- c('Realized Covariances', 'Cholesky Factors')
} else{
results <- list(realized)
names(results) <- 'Realized Covariances'
}
return(results)
}
realizedcovariance(day,freq = 'monthly', ret = F, cholesky = F)
head(day)
realizedcovariance(day,freq = 'monthly', ret = T, cholesky = F)
summary(day)
cor(day)
data <- day
ncoly <- ncol(data)
nrowy <- nrow(data)
start_date <- index(data)[1]
end_date <- index(data)[nrowy]
elapsed_months <- function(end_date, start_date) {
ed <- as.POSIXlt(end_date)
sd <- as.POSIXlt(start_date)
12 * (ed$year - sd$year) + (ed$mon - sd$mon)+1
}
elapsed_quarters <- function(end_date, start_date){
(as.yearqtr(end_date)-
as.yearqtr(start_date))*4
}
elapsed_years <- function(end_date, start_date){
year(end_date)-
year(start_date)
}
nmonth <- elapsed_months(end_date, start_date)
nquarter <- elapsed_quarters(end_date, start_date)
nyear <- elapsed_years(end_date, start_date)
retu <- matrix(ncol = ncoly, nrow = nrowy)
crosspro <- matrix(ncol = (ncoly*(ncoly+1)), nrow = nrowy)
retu <- data
for (i in 1:nrowy){
cross <- retu[i,]%*%t(retu[i,])
crosspro[i,] <- t(vech(cross))
}
nrowy
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.monthly(cross1[,k], sum)
}
View(realized)
(ncoly*(ncoly+1)/2)
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
k = 1
realized[, k] <- apply.monthly(cross1[,k], sum)
View(realized)
k = 2
realized[, k] <- apply.monthly(cross1[,k], sum)
View(realized)
crosspro[1,]
crosspro[2,]
cross
retu <- data
crosspro <- matrix(ncol = (ncoly*(ncoly+1)), nrow = nrowy)
for (i in 1:nrowy){
cross <- t(retu[i,])%*%retu[i,]
crosspro[i,] <- t(vech(cross))
}
crosspro[1,]
crosspro[2,]
crosspro[3,]
crosspro[4,]
cross
vech(cross)
tmp <- vech(cross)
crosspro <- matrix(ncol = (ncoly*(ncoly+1)), nrow = nrowy)
for (i in 1:nrowy){
cross <- t(retu[i,])%*%retu[i,]
crosspro[i,] <- vech(cross)
}
crosspro[2,]
crosspro[3,]
crosspro <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nrowy)
for (i in 1:nrowy){
cross <- t(retu[i,])%*%retu[i,]
crosspro[i,] <- vech(cross)
}
crosspro[3,]
retu <- data
crosspro <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nrowy)
for (i in 1:nrowy){
cross <- t(retu[i,])%*%retu[i,]
crosspro[i,] <- vech(cross)
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.monthly(cross1[,k], sum)
}
View(realized)
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
j = 1
rcovmat <- invvech(as.matrix(realized[j,]))
rcovmat
chol1 <- t(chol(rcovmat))
chol1
vech(chol1)
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (j in 1:nmonth){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
realizedcovariance <- function(data, freq, ret = F, cholesky = F){
require(quantmod)
require(ks)
require(lubridate)
if(!freq %in% c('daily', 'monthly', 'quarterly', 'yearly')){
stop('Please, provide a correct frequency for the realized covariance matrix!')
}
if(is(data, 'xts') == F){
stop('Data should be of class "xts".')
}
ncoly <- ncol(data)
nrowy <- nrow(data)
start_date <- index(data)[1]
end_date <- index(data)[nrowy]
elapsed_months <- function(end_date, start_date) {
ed <- as.POSIXlt(end_date)
sd <- as.POSIXlt(start_date)
12 * (ed$year - sd$year) + (ed$mon - sd$mon)+1
}
elapsed_quarters <- function(end_date, start_date){
(as.yearqtr(end_date)-
as.yearqtr(start_date))*4
}
elapsed_years <- function(end_date, start_date){
year(end_date)-
year(start_date)
}
nmonth <- elapsed_months(end_date, start_date)
nquarter <- elapsed_quarters(end_date, start_date)
nyear <- elapsed_years(end_date, start_date)
retu <- matrix(ncol = ncoly, nrow = nrowy)
if(ret == F){
if(freq == 'daily'){
}
if(freq == 'monthly'){
for(j in 1:ncoly){
retu[,j] <- dailyReturn(data[,j])*100
}
crosspro <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nrowy)
for (i in 1:nrowy){
cross <- t(retu[i,])%*%retu[i,]
crosspro[i,] <- vech(cross)
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.monthly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (j in 1:nmonth){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
if(freq == 'quarterly'){
for(j in 1:ncoly){
retu[,j] <- dailyReturn(data[,j])*100
}
crosspro <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nrowy)
for (i in 1:nrowy){
cross <- t(retu[i,])%*%retu[i,]
crosspro[i,] <- vech(cross)
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nquarter)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.quarterly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nquarter)
for (j in 1:nmonth){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
if(freq == 'yearly'){
for(j in 1:ncoly){
retu[,j] <- monthlyReturn(data[,j])*100
}
crosspro <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nrowy)
for (i in 1:nrowy){
cross <- t(retu[i,])%*%retu[i,]
crosspro[i,] <- vech(cross)
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nyear)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.quarterly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nyear)
for (j in 1:nyear){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
}else{
retu <- data
if(freq == 'daily'){
}
if(freq == 'monthly'){
crosspro <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nrowy)
for (i in 1:nrowy){
cross <- t(retu[i,])%*%retu[i,]
crosspro[i,] <- vech(cross)
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.monthly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nmonth)
for (j in 1:nmonth){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
if(freq == 'quarterly'){
crosspro <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nrowy)
for (i in 1:nrowy){
cross <- t(retu[i,])%*%retu[i,]
crosspro[i,] <- vech(cross)
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nquarter)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.quarterly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nquarter)
for (j in 1:nmonth){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
if(freq == 'yearly'){
crosspro <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nrowy)
for (i in 1:nrowy){
cross <- retu[i,]%*%t(retu[i,])
crosspro[i,] <- vech(cross)
}
cross1 <- zoo(crosspro, order.by = index(data))
realized <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nyear)
for (k in 1:(ncoly*(ncoly+1)/2)){
realized[, k] <- apply.quarterly(cross1[,k], sum)
}
chol2 <- matrix(ncol = (ncoly*(ncoly+1)/2), nrow = nyear)
for (j in 1:nyear){
rcovmat <- invvech(as.matrix(realized[j,]))
chol1 <- t(chol(rcovmat))
chol2[j,] <- vech(chol1)
}
}
}
if(cholesky == T){
results <- list(realized, chol2)
names(results) <- c('Realized Covariances', 'Cholesky Factors')
} else{
results <- list(realized)
names(results) <- 'Realized Covariances'
}
return(results)
}
realizedcovariance(day,freq = 'monthly', ret = T, cholesky = F)
prova <- realizedcovariance(day,freq = 'monthly', ret = T, cholesky = F)
prova$`Realized Covariances`[1,]
realized[1,]
realized[100,]
prova$`Realized Covariances`[100,]
prova <- realizedcovariance(day,freq = 'monthly', ret = T, cholesky = T)
prova$`Cholesky Factors`
require(xts)
